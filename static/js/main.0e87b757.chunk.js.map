{"version":3,"sources":["components/CalculateData.jsx","components/TableGenerate.jsx","components/PreLoad.jsx","components/InputArea.jsx","components/TitleBanner.jsx","components/App.jsx","index.js"],"names":["CalculateData","data","inputIntervals","useState","intervals","setIntervals","range","setRange","ampl","setAmpl","interData","setInterData","average","setAverage","createIntervalRanges","useCallback","iData","lowerVal","i","highVal","push","Math","ceil","useEffect","parseFloat","v","sqrt","length","round","r","a","calcAbsFrec","pointer","inter","forEach","val","ix","val2","isNaN","calcMpByAbsFrec","accum","ind","calcAverage","arr","cumulativeFrecuence","setOfData","newArr","className","scope","map","absoluteFrecuence","index","toFixed","TableGenerate","dataValues","intervalData","values","setValues","split","num","prev","sort","b","style","margin","PreLoad","class","InputArea","setData","intervalsData","setIntervalsData","finalData","setFinalData","finalIntervalsData","setFinalIntervalsData","onSubmit","e","preventDefault","htmlFor","type","id","value","onChange","prevData","target","TitleBanner","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e87b757.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nexport const CalculateData = ({data, inputIntervals}) => {\r\n\r\n  const [intervals, setIntervals] = useState(0)\r\n  const [range, setRange] = useState(0)\r\n  const [ampl, setAmpl] = useState(0)\r\n  const [interData, setInterData] = useState([])\r\n  const [average, setAverage] = useState(0)\r\n  \r\n\r\n  const createIntervalRanges = useCallback(() => {\r\n    const iData = []\r\n    let lowerVal = data[0]\r\n\r\n    for(let i = 0; i < intervals; i++) {\r\n      let highVal = lowerVal + ampl;\r\n      iData.push([Math.ceil(lowerVal), Math.ceil(highVal)]);\r\n      lowerVal = highVal;\r\n    }\r\n\r\n    return iData;\r\n  }, [ampl, data, intervals])\r\n\r\n  useEffect(() => {\r\n\r\n      if(inputIntervals && inputIntervals > 0) {\r\n        setIntervals(parseFloat(inputIntervals));\r\n      } else {\r\n        let v = Math.sqrt(data.length)\r\n        setIntervals(Math.round(v))\r\n      }\r\n\r\n      const r = data[data.length - 1] - data[0]\r\n\r\n      setRange(r)\r\n\r\n      let a = range / intervals\r\n\r\n      if(range % a === 0) {\r\n        setAmpl(Math.ceil(a))\r\n      } else {\r\n        setAmpl(Math.ceil(a))\r\n      }\r\n\r\n      setInterData(createIntervalRanges())\r\n\r\n  }, [data, intervals, range, inputIntervals, createIntervalRanges])\r\n\r\n\r\n  const calcAbsFrec = useCallback(() => {\r\n    let pointer = [] \r\n    const inter = createIntervalRanges()\r\n\r\n    inter.forEach((val, ix) => {\r\n      data.forEach((val2) => {\r\n\r\n        if(ix === inter.length - 1 && data[data.length - 1] === val[1]) {\r\n          if(val2 >= inter[ix][0] && val2 <= inter[ix][1]) {\r\n            if (isNaN(pointer[ix])) {\r\n              pointer[ix] = 1\r\n            } else {\r\n              pointer[ix]++\r\n            }\r\n          }\r\n        } else {\r\n          if(val2 >= inter[ix][0] && val2 < inter[ix][1]) {\r\n            if (isNaN(pointer[ix])) {\r\n              pointer[ix] = 1\r\n            } else {\r\n              pointer[ix]++\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    return pointer\r\n  }, [createIntervalRanges, data])\r\n\r\n  const calcMpByAbsFrec = useCallback(() => {\r\n\r\n    let accum = 0\r\n    let pointer = []\r\n\r\n    calcAbsFrec().forEach((val, ind) => {\r\n      accum += ((interData[ind][0] + interData[ind][1]) / 2) * val\r\n      pointer.push(accum)\r\n    })\r\n\r\n    return pointer\r\n\r\n  }, [calcAbsFrec, interData])\r\n\r\n  const calcAverage = useCallback(() => {\r\n\r\n    let arr = calcMpByAbsFrec()\r\n\r\n    return arr[arr.length - 1] / data.length\r\n    \r\n  }, [calcMpByAbsFrec, data])\r\n\r\n  useEffect(() => {\r\n\r\n    setAverage(calcAverage())\r\n\r\n  }, [calcAverage])\r\n\r\n  const cumulativeFrecuence = (setOfData) => {\r\n\r\n    let newArr = []\r\n    let accum = 0\r\n    \r\n    setOfData.forEach((val, ind) => {\r\n      accum += val\r\n      newArr.push(accum)\r\n    })\r\n\r\n    return newArr\r\n  }\r\n\r\n  return (\r\n        <>\r\n          <table className=\"table table-success table-striped table-sm my-table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Intervalos</th>\r\n                <th scope=\"col\">Marca de clase (Pm)</th>\r\n                <th scope=\"col\">Frecuencia Absoluta (fi)</th>\r\n                <th scope=\"col\">Frecuencia acumulada (fa)</th>\r\n                <th scope=\"col\">Frecuencia Relativa</th>\r\n                <th scope=\"col\">Pm * fi</th>\r\n                <th scope=\"col\">&sum; (Pm * fi)</th>\r\n                <th scope=\"col\">(Pm - &mu;)^2</th>\r\n                <th scope=\"col\">fi * (Pm - &mu;)^2</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n          {calcAbsFrec().map((absoluteFrecuence, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  {\"[\" + interData[index][0] + \", \" + interData[index][1] + \")\"}\r\n                </td>\r\n                <td>\r\n                  {(interData[index][0] + interData[index][1]) / 2}\r\n                </td>\r\n                <td>\r\n                  {isNaN(absoluteFrecuence) ? \"Error\" : absoluteFrecuence}\r\n                </td>\r\n                <td>{cumulativeFrecuence(calcAbsFrec())[index]}</td>\r\n                <td>{(absoluteFrecuence / data.length).toFixed(2)}</td>\r\n                <td>{((interData[index][0] + interData[index][1]) / 2) * absoluteFrecuence}</td>\r\n                <td>{calcMpByAbsFrec()[index]}</td>\r\n                <td>{((((interData[index][0] + interData[index][1]) / 2) - average)**2).toFixed(2)}</td>\r\n                <td>{(((((interData[index][0] + interData[index][1]) / 2) - average)**2) * absoluteFrecuence).toFixed(2)}</td>\r\n              </tr>\r\n            )\r\n          \r\n          })}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div>\r\n            <h3>Información adicional</h3>\r\n            <ul>\r\n              <li>Rango: {range}</li>\r\n              <li>Intervalos: {intervals}</li>\r\n              <li>Amplitud: {ampl}</li>\r\n              <li>Media aritmética: {average}</li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n\r\n        \r\n\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { CalculateData } from './CalculateData';\r\n\r\nexport const TableGenerate = ({dataValues, intervalData}) => {\r\n\r\n  const [values, setValues] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    dataValues.split(\",\").forEach(num => {\r\n      setValues(prev => [...prev, parseFloat(num)].sort((a, b) => a - b))\r\n    })\r\n\r\n  }, [dataValues]);\r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={{margin: \"5vh 0\"}}>\r\n      <h1>Tabla generada</h1>\r\n      <div className=\"space\">\r\n        <CalculateData data={values} inputIntervals={intervalData}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PreLoad = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"card text-dark bg-light mb-3\" style={{margin: \"5vh 0\"}}>\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Inserte datos para analizar</h5>\r\n          <p class=\"card-text\">En el campo de arriba, coloque una serie de datos separados por una coma.</p>\r\n        </div>\r\n      </div>   \r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { TableGenerate } from './TableGenerate'\r\nimport { PreLoad } from './PreLoad'\r\n\r\nexport const InputArea = () => {\r\n\r\n  const [data, setData] = useState(\"\")\r\n  const [intervalsData, setIntervalsData] = useState(\"\")\r\n  const [finalData, setFinalData] = useState(\"\")\r\n  const [finalIntervalsData, setFinalIntervalsData] = useState(\"\")\r\n\r\n  const updateStateData = (e) => {\r\n    setData(prevData => prevData = e.target.value)\r\n  }\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFinalData(data);\r\n    setFinalIntervalsData(intervalsData)\r\n    setData(\"\");\r\n    setIntervalsData(\"\");\r\n  } \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-2\">\r\n          <label className=\"form-label\" htmlFor=\"data-i\">Inserte los datos (separados por una coma)</label>\r\n          <br />\r\n          <input className=\"form-control\" type=\"text\" id=\"data-i\" value={data} onChange={updateStateData}/>\r\n        </div>\r\n        <br />\r\n\r\n\r\n        <div className=\"mb-2\">\r\n          <label htmlFor=\"inter-i\" className=\"form-label\">Intervalos (si el problema no los especifíca, dejar en blanco)</label>\r\n          <br />\r\n          <input className=\"form-control\" type=\"number\" id=\"inter-i\" value={intervalsData} onChange={(e) => setIntervalsData(e.target.value)}/>\r\n        </div>\r\n        <br />\r\n\r\n        <div><input className=\"btn btn-primary\" type=\"submit\" value=\"Analizar datos\"/></div>\r\n      </form>\r\n\r\n      {finalData !== \"\" ? <TableGenerate dataValues={finalData} intervalData={finalIntervalsData}/> : <PreLoad />}\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const TitleBanner = () => {\r\n  return (\r\n    <div className=\"banner\">\r\n      <div>\r\n        <h1>Tablas de estadística</h1>\r\n        <p>Generador de tablas básico</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { InputArea } from './InputArea'\r\nimport { TitleBanner } from './TitleBanner'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <div >\r\n      <TitleBanner />\r\n      <InputArea/>\r\n    </div>\r\n  )\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App.jsx\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}